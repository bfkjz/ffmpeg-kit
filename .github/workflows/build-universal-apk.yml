name: Build Universal FFmpegKit APK (All Architectures)
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Android SDK & NDK
        uses: android-actions/setup-android@v2
        with:
          ndk-version: '25.2.9519653'

      - name: Create App Module Automatically
        run: |
          # 创建 app/ 模块目录结构
          mkdir -p app/src/main/java/ffmpeg/binfen/zeb
          mkdir -p app/src/main/res/layout
          mkdir -p apks

          # 写入 build.gradle
          cat > app/build.gradle << EOL
          plugins {
              id 'com.android.application'
          }

          android {
              namespace 'ffmpeg.binfen.zeb'
              compileSdk 34

              defaultConfig {
                  applicationId "ffmpeg.binfen.zeb"
                  minSdk 21
                  targetSdk 34
                  versionCode 1
                  versionName "1.0"
              }

              buildTypes {
                  release {
                      minifyEnabled false
                      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                  }
              }

              // 构建 Universal APK（包含所有架构）
              splits {
                  abi {
                      reset()
                      enable true
                      include 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                      universalApk true
                  }
              }
          }

          dependencies {
              implementation files('../android/ffmpeg-kit-android-lib/build/outputs/aar/ffmpeg-kit-release.aar')
          }
          EOL

          # MainActivity.java
          cat > app/src/main/java/ffmpeg/binfen/zeb/MainActivity.java << EOL
          package ffmpeg.binfen.zeb;

          import android.os.Bundle;
          import android.text.method.ScrollingMovementMethod;
          import android.widget.*;
          import androidx.appcompat.app.AppCompatActivity;
          import com.arthenica.ffmpegkit.FFmpegKit;

          public class MainActivity extends AppCompatActivity {

              @Override
              protected void onCreate(Bundle savedInstanceState) {
                  super.onCreate(savedInstanceState);
                  setContentView(R.layout.activity_main);

                  EditText commandInput = findViewById(R.id.command_input);
                  Button runButton = findViewById(R.id.run_button);
                  TextView outputText = findViewById(R.id.output_text);
                  outputText.setMovementMethod(new ScrollingMovementMethod());

                  runButton.setOnClickListener(v -> {
                      String command = commandInput.getText().toString();
                      if (command.isEmpty()) return;

                      outputText.setText("Running FFmpeg command...\n");

                      FFmpegKit.executeAsync(command, session -> {
                          String log = session.getLogs().toString();
                          outputText.setText(log);
                      });
                  });
              }
          }
          EOL

          # activity_main.xml
          cat > app/src/main/res/layout/activity_main.xml << EOL
          <?xml version="1.0" encoding="utf-8"?>
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:orientation="vertical"
              android:padding="16dp">

              <EditText
                  android:id="@+id/command_input"
                  android:layout_width="match_parent"
                  android:layout_height="wrap_content"
                  android:hint="Enter FFmpeg command"/>

              <Button
                  android:id="@+id/run_button"
                  android:layout_width="wrap_content"
                  android:layout_height="wrap_content"
                  android:text="Run"/>

              <TextView
                  android:id="@+id/output_text"
                  android:layout_width="match_parent"
                  android:layout_height="0dp"
                  android:layout_weight="1"
                  android:background="#f0f0f0"
                  android:padding="8dp"/>
          </LinearLayout>
          EOL

          # AndroidManifest.xml
          cat > app/src/main/AndroidManifest.xml << EOL
          <manifest package="ffmpeg.binfen.zeb" xmlns:android="http://schemas.android.com/apk/res/android">
              <application android:allowBackup="true" android:label="ffmpeg kit from Zeb">
                  <activity android:name=".MainActivity">
                      <intent-filter>
                          <action android:name="android.intent.action.MAIN" />
                          <category android:name="android.intent.category.LAUNCHER" />
                      </intent-filter>
                  </activity>
              </application>
          </manifest>
          EOL

          # settings.gradle 添加 :app 模块
          echo "include ':app'" >> settings.gradle

      - name: Build FFmpegKit AAR for All Architectures
        run: |
          ./android.sh --enable-arm-v7a --enable-arm64-v8a --enable-x86 --enable-x86-64

      - name: Build APKs
        run: |
          cd app
          ../gradlew assembleRelease

      - name: Copy APKs
        run: |
          find app/build/outputs/apk/release -name "*.apk" -exec cp {} apks/ \;

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: apks/*.apk
          tag_name: "release-${{ github.run_number }}"
          name: "ffmpeg kit from Zeb - Build ${{ github.run_number }}"
